pid /tmp/nginx.pid;

events {
    worker_connections  1024;
  }

http {

include    /etc/nginx/conf.d/mime.types;
gzip on;
gzip_vary on;
gzip_min_length 10240;
gzip_proxied expired no-cache no-store private auth;
gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
gzip_disable "MSIE [1-6]\.";

    server {

        listen       8443 ssl;

        # SSL-Certificate and private key
        ssl_certificate /etc/nginx/conf.d/cert.pem;
        ssl_certificate_key /etc/nginx/conf.d/key.pem;

        # The supported SSL Protocols
        ssl_protocols   TLSv1.2 TLSv1.3;

        # NGINX can impose its TLS cipher suite choices over those of a connecting browser, provided the browser supports them.
        ssl_prefer_server_ciphers      on;

        # The supported SSL Ciphers
        ssl_ciphers                    'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-RC4-SHA:ECDHE-RSA-RC4-SHA:ECDH-ECDSA-RC4-SHA:ECDH-RSA-RC4-SHA:RC4-SHA';

        # Path to the Diffie-Hellman Prime - # to create: openssl dhparam -out /etc/nginx/dhparam.pem 4096
        # ssl_dhparam                    /etc/nginx/dhparam.pem;


        ssl_session_cache  builtin:1000  shared:SSL:10m;

        # OCSP Stapling
        # When enabled, NGINX will make OCSP requests on behalf of connecting browsers. The response received from the OCSP server is added to NGINX’s browser response, which eliminates the need for browsers to verify a certificate’s revocation status by connecting directly to an OCSP server.
        ssl_stapling                  on;
        ssl_stapling_verify           on;


        # Header Options
        add_header                    Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header                    X-Content-Type-Options nosniff;
        add_header                    X-Frame-Options SAMEORIGIN;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        root /usr/share/nginx/html;
        index index.html;
        location / {
            try_files $uri $uri/ /index.html;
        }

	location /api/ {
            proxy_pass http://feasibility-gui-backend:8090/api/;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host  $host;
        }

	location /auth {
            proxy_buffers 4 128k;
            proxy_busy_buffers_size 128k;
            proxy_buffer_size 64k;
            proxy_pass http://auth:8080/auth;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Real-IP $remote_addr;
        }

  location /auth/keycloakadmin {
          proxy_buffers 4 128k;
          proxy_busy_buffers_size 128k;
          proxy_buffer_size 64k;
          proxy_pass http://auth:8080/auth;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host $host;
          proxy_set_header X-Forwarded-Port $server_port;
          proxy_set_header X-Real-IP $remote_addr;
      }

    }
}
